McGill Robotics 
updated Jan 16 by David Lavoie-Boutin


List and informations of all the ros launch files present in the catkin workspace

In catkin_ws/launch/:

front_end2.launch :: launches the front_end central_app.py which starts the ui for testing and monitoring

depthController.launch :: deprecated, not working, launches simulator, front_end and depthController of control systems

integration.launch :: launches the UI, the simulator and the control systems. <-- this is most likely the one you want to drive and monitor the robot in the simulation environment

in catkin_ws/src/front_end/launch/:

local_all.launch :: launches the UI, the simulator and the control systems to be used on one single machine. <-- this is most likely the one you want to drive and monitor the robot in the simulation environment with one computer

master_server :: launches the simulator and controls systems but not the UI, you may also want to run remote_front_end.launch on a separate computer to monitor the robot.

remote_front_end.launch :: sets the environment variable ROS_MASTER_URI to be McGill:11311, which you can map in your /etc/hosts to be the computer running roscore. This is to let you run the front end on a separate computer than the one running the cv, planner, controls, etc nodes, which is what we will be doing with the actual robot.
