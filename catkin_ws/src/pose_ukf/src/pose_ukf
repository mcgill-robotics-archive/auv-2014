#!/usr/bin/env python
#Node for UKF

import rospy
from geometry_msgs.msg import PoseStamped
from geometry_msgs.msg import Quaternion
from sensor_msgs.msg import Imu
import ukf

def vectorToList(vector):
    return [vector.x, vector.y, vector.z]

def listToQuaternion(l):
    q = Quaternion()
    q.w = l[0]
    q.x = l[1]
    q.y = l[2]
    q.z = l[3]
    return q

def dataCallback(imu_msg):
    acc = vectorToList(imu_msg.linear_acceleration)
    gyro = vectorToList(imu_msg.angular_velocity)
    q = estimator.update(acc,gyro)

    pose_msg = PoseStamped()
    pose_msg.header = imu_msg.header
    pose_msg.header.frame_id = 'base_footprint'
    pose_msg.pose.orientation = listToQuaternion(q)
    pub.publish(pose_msg)


def init():
    global estimator, pub
    estimator =  ukf.ukf()
    rospy.init_node('pose_ukf')
    rospy.Subscriber('imu_data', Imu, dataCallback)
    pub = rospy.Publisher('ukf', PoseStamped)
    rospy.spin()

if __name__ == '__main__':
    try:
        init()
    except rospy.ROSInterruptException:
        pass
