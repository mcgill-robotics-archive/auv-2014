alias go='rosparam set /go 1'
alias planner_pls='rosparam set /go 1'
alias main='tmux attach -t main'
alias roscereal='rosrun rosserial_python serial_node.py'
alias asimov='ssh -X robotics@10.0.0.1'
alias asimosh='mosh robotics@10.0.0.1'
alias uri='export ROS_MASTER_URI=http://McGill:11311'
alias softkill='rostopic pub /controls/softKill std_msgs/Bool "data: true"'
alias softstart='rostopic pub /controls/softKill std_msgs/Bool "data: false"'

function stop_warning {
    rosservice call /warning_lights "{'colors': [{'r': 0, 'b': 0, 'g': 0}], 'frequency': 0.0, 'on': false}"
}

function motor {
    rostopic pub -r 1 /electrical_interface/motor controls/motorCommands "{cmd_surge_starboard: $1, cmd_surge_port: $2, cmd_sway_bow: $3, cmd_sway_stern: $4, cmd_heave_bow: $5, cmd_heave_stern: $6}"
}

alias motor_stop='motor 0 0 0 0 0 0'
alias motor_positive='motor 200 200 200 200 200 200'

alias rosecho='rostopic echo'
alias roscamera='roslaunch computer_vision'

if [ -f /opt/ros/hydro/setup.bash ];
then
    source /opt/ros/hydro/setup.bash
else
    source /opt/ros/indigo/setup.bash
fi

source $ROBOTIC_PATH/catkin_ws/devel/setup.bash
export ROS_PACKAGE_PATH=/opt/ros/hydro/stacks:/opt/ros/hydro/share:$ROBOTIC_PATH/catkin_ws
export ROS_WORKSPACE=$ROBOTIC_PATH/catkin_ws
#export ROS_MASTER_URI=http://mcgill:11311
alias bag='$ROBOTIC_PATH/dotfiles/bagger' 
